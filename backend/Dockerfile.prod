# ---------- Build stage ----------
FROM golang:1.25-alpine AS builder

# Install dependencies
RUN apk add --no-cache git build-base sqlite-dev openssl nss-tools

WORKDIR /app

# Copy go mod files first for caching
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Install mkcert
RUN wget -q https://dl.filippo.io/mkcert/latest?for=linux/amd64 -O /usr/local/bin/mkcert && \
    chmod +x /usr/local/bin/mkcert && \
    mkcert -install

# Generate a local CA + cert for localhost and IPs
RUN mkdir -p cert && \
    mkcert -key-file cert/key.pem -cert-file cert/cert.pem localhost 127.0.0.1 ::1 0.0.0.0

# Build your Go binary
RUN CGO_ENABLED=1 GOOS=linux go build -a -installsuffix cgo \
    -ldflags='-w -s -extldflags "-static"' -o main .

# ---------- Runtime stage ----------
FROM alpine:latest

RUN apk add --no-cache ca-certificates sqlite-libs nss-tools
RUN addgroup -g 1001 -S appuser && adduser -u 1001 -S appuser -G appuser

WORKDIR /app

# Copy binary and certs
COPY --from=builder --chown=appuser:appuser /app/main .
COPY --from=builder --chown=appuser:appuser /app/cert ./cert

USER appuser
EXPOSE 9997

CMD ["./main"]
