services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    image: ecommerce-backend-prod
    container_name: ecommerce-backend-prod
    working_dir: /app
    ports:
      - "${BACKEND_HOST_PORT:-6660}:9997"  # host port configurable, default 6660
    environment:
      - DB_FILE=/app/data/contactus.db
      - GIN_MODE=release
      - ADMIN_API_KEY=abcd123
    volumes:
      - ./backend-data:/app/data  # host folder bind mount for writable SQLite
      - /tmp:/tmp  # Mount system temp folder for audio storage
    networks:
      - prodnet
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9997/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  sqlite-web:
    image: coleifer/sqlite-web
    container_name: sqlite-web
    environment:
      - SQLITE_WEB_PASSWORD=abcd123
      - SQLITE_WEB_PORT=8080
    command: ["sqlite_web", "-H", "0.0.0.0", "-p", "8080", "-P", "/data/contactus.db"]
    ports:
      - "${SQLITE_HOST_PORT:-6661}:8080"  # host port configurable, default 6661
    volumes:
      - ./backend-data:/data  # same folder as backend
    networks:
      - prodnet
    restart: unless-stopped

networks:
  prodnet:
    driver: bridge
